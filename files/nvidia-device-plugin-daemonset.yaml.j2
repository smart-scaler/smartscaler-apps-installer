apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ manifest_vars.daemonset_name }}
  namespace: {{ manifest_vars.daemonset_namespace }}
spec:
  selector:
    matchLabels:
      name: nvidia-device-plugin-ds
  template:
    metadata:
      labels:
        name: nvidia-device-plugin-ds
    spec:
      volumes:
        - name: device-plugin
          hostPath:
            path: {{ manifest_vars.device_plugin_path }}
            type: ''
      containers:
        - name: nvidia-device-plugin-ctr
          image: {{ manifest_vars.device_plugin_image }}
          env:
            - name: FAIL_ON_INIT_ERROR
              value: '{{ manifest_vars.fail_on_init_error }}'
          resources: {}
          volumeMounts:
            - name: device-plugin
              mountPath: {{ manifest_vars.device_plugin_path }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      tolerations:
{% for toleration in manifest_vars.tolerations %}
        - key: "{{ toleration.key }}"
          operator: "{{ toleration.operator }}"
          effect: "{{ toleration.effect }}"
{% endfor %}
      priorityClassName: {{ manifest_vars.priority_class_name }}
  updateStrategy:
    type: {{ manifest_vars.update_strategy.type }}
    rollingUpdate:
      maxUnavailable: {{ manifest_vars.update_strategy.rolling_update.max_unavailable }}
      maxSurge: {{ manifest_vars.update_strategy.rolling_update.max_surge }}
  revisionHistoryLimit: {{ manifest_vars.revision_history_limit }}
