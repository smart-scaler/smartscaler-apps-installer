---
- name: Set effective Helm variables with global fallback
  set_fact:
    effective_kubeconfig: "{{ item.kubeconfig | default(global_kubeconfig) }}"
    effective_kubecontext: "{{ item.kubecontext | default(global_kubecontext) }}"
    effective_chart_repo_url: "{{ item.chart_repo_url | default(global_chart_repo_url) }}"
    effective_repo_username: "{{ item.repo_username | default(global_repo_username) }}"
    effective_repo_password: "{{ item.repo_password | default(global_repo_password) }}"
    effective_use_local_chart: "{{ item.use_local_chart | default(use_local_charts) }}"
    effective_local_chart_path: "{{ item.local_chart_path | default(local_charts_path) }}"
    effective_readd_helm_repo: "{{ item.readd_helm_repo | default(readd_helm_repos) }}"
    effective_insecure_skip_tls_verify: "{{ item.insecure_skip_tls_verify | default(insecure_skip_tls_verify) }}"

- name: Generate random string for temporary repo name
  set_fact:
    temp_repo_name: "{{ 999999999 | random | string }}"
  when: not effective_use_local_chart

- name: Add Helm repository
  kubernetes.core.helm_repository:
    name: "{{ temp_repo_name }}"
    repo_url: "{{ effective_chart_repo_url }}"
    username: "{{ effective_repo_username | default(omit) if effective_repo_username else omit }}"
    password: "{{ effective_repo_password | default(omit) if effective_repo_password else omit }}"
    repo_state: present
    insecure_skip_tls_verify: "{{ effective_insecure_skip_tls_verify | default(true) }}"
  when: not effective_use_local_chart and effective_readd_helm_repo

- name: Debug Helm chart configuration
  debug:
    msg:
      - "Chart: {{ item.release_name }}"
      - "Namespace: {{ item.release_namespace }}"
      - "Force: {{ item.force | default(false) }}"
      - "Atomic: {{ item.atomic | default(false) }}"
      - "Reset Values: {{ item.reset_values | default(true) }}"
      - "Reuse Values: {{ item.reuse_values | default(false) }}"
      - "Values: {{ item.release_values | default({}) }}"
      - "Values Files: {{ item.values_files | default([]) }}"

- name: Install/Upgrade Helm chart
  kubernetes.core.helm:
    name: "{{ item.release_name }}"
    chart_ref: "{{ temp_repo_name + '/' + item.chart_ref if not effective_use_local_chart else effective_local_chart_path + '/' + item.chart_ref }}"
    chart_version: "{{ item.chart_version | default(omit) }}"
    release_namespace: "{{ item.release_namespace }}"
    create_namespace: "{{ item.create_namespace | default(true) }}"
    kubeconfig: "{{ effective_kubeconfig }}"
    context: "{{ effective_kubecontext }}"
    wait: "{{ item.wait | default(false) }}"
    timeout: "{{ item.timeout | default('600s') }}"
    values: "{{ item.release_values | default({}) }}"
    values_files: "{{ item.values_files | default([]) }}"
    force: "{{ item.force | default(false) }}"
    atomic: "{{ item.atomic | default(false) }}"
    reset_values: "{{ item.reset_values | default(true) }}"
    reuse_values: "{{ item.reuse_values | default(false) }}"
    state: present
  register: helm_result

- name: Track successful helm installation
  include_tasks: "{{ playbook_dir }}/tasks/summary_tracker.yml"
  vars:
    item_name: "{{ item.release_name }}"
    item_type: "helm"
    item_details: "Chart: {{ item.chart_ref }} v{{ item.chart_version | default('latest') }} in {{ item.release_namespace }}"
  when: 
    - helm_result is succeeded
    - summary_enabled | default(true)

- name: Track failed helm installation
  include_tasks: "{{ playbook_dir }}/tasks/summary_tracker.yml"
  vars:
    item_name: "{{ item.release_name }}"
    item_type: "helm"
    item_error: "{{ helm_result.msg | default('Helm installation failed') }}"
    item_details: "Chart: {{ item.chart_ref }} v{{ item.chart_version | default('latest') }} in {{ item.release_namespace }}"
  when: 
    - helm_result is failed
    - summary_enabled | default(true)

- name: Remove temporary Helm repository
  kubernetes.core.helm_repository:
    name: "{{ temp_repo_name }}"
    repo_state: absent
  when: not effective_use_local_chart and effective_readd_helm_repo 