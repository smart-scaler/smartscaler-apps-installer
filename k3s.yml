---
- name: Deploy K3s Cluster Only
  hosts: localhost
  gather_facts: true
  become: true
  become_method: sudo
  vars_files:
    - user_input.yml
  vars:
    inventory_dir: "{{ playbook_dir }}/inventory"
    k3s_dir: "{{ playbook_dir }}/k3s"

  pre_tasks:
    - name: Load and verify user_input.yml
      block:
        - name: Load user_input.yml content
          include_vars:
            file: user_input.yml
            name: user_input

        - name: Set global facts
          set_fact:
            k3s_deployment: "{{ user_input.k3s_deployment }}"
            kubernetes_deployment: "{{ user_input.kubernetes_deployment }}"
          when: user_input.k3s_deployment is defined

        - name: Verify k3s_deployment section exists
          fail:
            msg: "k3s_deployment section not found in user_input.yml"
          when: user_input.k3s_deployment is not defined

        - name: Display loaded configuration
          debug:
            msg: |
              Loaded configuration:
              - K3s enabled: {{ k3s_deployment.enabled }}
              - K3s version: {{ k3s_deployment.k3s_version }}
              - API Server: {{ kubernetes_deployment.api_server.host }}

    - name: Check if K3s deployment is enabled
      debug:
        msg: "K3s deployment is disabled in user_input.yml. Skipping all tasks."
      when: not k3s_deployment.enabled | default(false)

    - name: Validate prerequisites
      include_tasks: "tasks/common_prerequisites.yml"
      when: 
        - k3s_deployment.enabled | default(false)
        - not (skip_prerequisites | default(false) | bool)

    - name: Validate K3s-specific prerequisites
      include_tasks: "tasks/validate_prerequisites.yml"
      when: 
        - k3s_deployment.enabled | default(false)
        - not (skip_prerequisites | default(false) | bool)

    - name: Ensure inventory directory exists
      file:
        path: "{{ inventory_dir }}"
        state: directory
        mode: '0755'
      when: k3s_deployment.enabled | default(false)

  tasks:
    - name: Deploy K3s Cluster using local k3s-ansible
      ansible.builtin.import_playbook: "{{ playbook_dir }}/k3s-ansible/playbooks/site.yml"
      vars:
        inventory_file: "{{ inventory_dir }}/k3s/inventory.yml"
      when: k3s_deployment.enabled | default(false)

  post_tasks:
    - name: Initialize summary tracking
      include_tasks: "tasks/summary_tracker.yml"
      when: 
        - summary_enabled | default(true)
        - k3s_deployment.enabled | default(false)

    - name: Collect and generate K3s cluster summary
      include_tasks: "tasks/summary_tracker.yml"
      vars:
        generate_summary_report: false  # Don't show app summary for K3s-only deployment
        generate_k3s_summary_report: true
        should_save_summary: "{{ save_summary_to_file | default(true) }}"
      when: 
        - summary_enabled | default(true)
        - k3s_deployment.enabled | default(false)

    - name: Display K3s deployment completion message
      debug:
        msg: |
          
          🎉 K3s cluster deployment completed!
          
          {% if save_summary_to_file | default(true) %}
          📄 Summary report saved to: output/installation_summary_{{ ansible_date_time.epoch }}.md
          {% endif %}
          
          🔍 Check the cluster summary above for detailed results.
          
          💡 Next steps:
          • Verify cluster is ready: kubectl get nodes --kubeconfig=output/k3s-kubeconfig
          • Check system pods: kubectl get pods -n kube-system --kubeconfig=output/k3s-kubeconfig
          • Test cluster access: kubectl cluster-info --kubeconfig=output/k3s-kubeconfig
          • Export kubeconfig: export KUBECONFIG=$PWD/output/k3s-kubeconfig
          • All output files are saved in the ./output/ directory
          
          📋 To install Smart Scaler applications on this cluster:
          • Ensure global_kubeconfig in user_input.yml points to output/k3s-kubeconfig
          • Run: ansible-playbook site.yml
      when: 
        - summary_enabled | default(true)
        - k3s_deployment.enabled | default(false)
