---
# Handle local kubeconfig permissions
- name: Ensure local kubeconfig permissions
  block:
    - name: Check if local kubeconfig exists
      stat:
        path: "{{ global_kubeconfig }}"
      register: local_kubeconfig_stat
      ignore_errors: true

    - name: Set local kubeconfig permissions
      file:
        path: "{{ global_kubeconfig }}"
        mode: '0600'
        state: file
      when: local_kubeconfig_stat.stat is defined and local_kubeconfig_stat.stat.exists
      ignore_errors: true
  when: not kubernetes_deployment.kubeconfig.use_remote | default(false)
  ignore_errors: true

# Handle remote kubeconfig permissions
- name: Ensure remote kubeconfig permissions
  block:
    - name: Check if remote kubeconfig exists
      shell: |
        ssh -i {{ kubernetes_deployment.ssh_key_path }} {{ kubernetes_deployment.default_ansible_user }}@{{ kubernetes_deployment.control_plane_nodes[0].ansible_host }} 'test -f {{ kubernetes_deployment.kubeconfig.remote_path | default("/etc/kubernetes/admin.conf") }} && echo "exists"'
      register: remote_kubeconfig_check
      ignore_errors: true
      changed_when: false

    - name: Set remote kubeconfig permissions
      shell: |
        ssh -i {{ kubernetes_deployment.ssh_key_path }} {{ kubernetes_deployment.default_ansible_user }}@{{ kubernetes_deployment.control_plane_nodes[0].ansible_host }} 'sudo chmod 0600 {{ kubernetes_deployment.kubeconfig.remote_path | default("/etc/kubernetes/admin.conf") }} || true'
      register: chmod_result
      when: remote_kubeconfig_check.stdout == "exists"
      ignore_errors: true
      changed_when: chmod_result.rc == 0

    - name: Verify remote kubeconfig permissions (optional)
      shell: |
        ssh -i {{ kubernetes_deployment.ssh_key_path }} {{ kubernetes_deployment.default_ansible_user }}@{{ kubernetes_deployment.control_plane_nodes[0].ansible_host }} 'stat -c %a {{ kubernetes_deployment.kubeconfig.remote_path | default("/etc/kubernetes/admin.conf") }} || echo "skip"'
      register: stat_result
      when: remote_kubeconfig_check.stdout == "exists"
      ignore_errors: true
      changed_when: false
  when: kubernetes_deployment.kubeconfig.use_remote | default(false)
  ignore_errors: true

# Debug information
- name: Show kubeconfig status
  debug:
    msg: |
      Kubeconfig Status:
      {% if not kubernetes_deployment.kubeconfig.use_remote | default(false) %}
      - Mode: Local
      - Path: {{ global_kubeconfig }}
      - Exists: {{ local_kubeconfig_stat.stat.exists if (local_kubeconfig_stat.stat is defined) else 'unknown' }}
      {% else %}
      - Mode: Remote
      - Path: {{ kubernetes_deployment.kubeconfig.remote_path | default('/etc/kubernetes/admin.conf') }}
      - Exists: {{ 'yes' if remote_kubeconfig_check.stdout == 'exists' else 'no/unknown' }}
      - Permissions: {{ stat_result.stdout if (stat_result.stdout is defined and stat_result.stdout != 'skip') else 'unknown' }}
      {% endif %} 