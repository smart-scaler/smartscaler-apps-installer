---
- name: Deploy Kubernetes Cluster Only
  hosts: k8s_cluster
  gather_facts: true
  vars_files:
    - user_input.yml
  vars:
    inventory_dir: "{{ playbook_dir }}/inventory"
    kubespray_dir: "{{ playbook_dir }}/kubespray"
    ansible_become_pass: "{{ kubernetes_deployment.ansible_sudo_pass }}"

  pre_tasks:
    - name: Load and verify user_input.yml
      block:
        - name: Load user_input.yml content
          include_vars:
            file: user_input.yml
            name: user_input

        - name: Set global facts
          set_fact:
            kubernetes_deployment: "{{ user_input.kubernetes_deployment }}"
          when: user_input.kubernetes_deployment is defined

        - name: Verify kubernetes_deployment section exists
          fail:
            msg: "kubernetes_deployment section not found in user_input.yml"
          when: user_input.kubernetes_deployment is not defined

        - name: Display loaded configuration
          debug:
            msg: |
              Loaded configuration:
              - Kubernetes enabled: {{ kubernetes_deployment.enabled }}
              - API Server: {{ kubernetes_deployment.api_server.host }}
              - SSH Key: {{ kubernetes_deployment.ssh_key_path }}

    - name: Check if Kubernetes deployment is enabled
      debug:
        msg: "Kubernetes deployment is disabled in user_input.yml. Skipping all tasks."
      when: not kubernetes_deployment.enabled | default(false)

    - name: Ensure inventory directory exists
      file:
        path: "{{ inventory_dir }}"
        state: directory
        mode: '0755'
      when: kubernetes_deployment.enabled | default(false)

  tasks:
    - name: Deploy Kubernetes Cluster
      include_role:
        name: kubernetes
      vars:
        deploy_kubernetes: true
        kube_apiserver_ip: "{{ kubernetes_deployment.api_server.host }}"
        loadbalancer_apiserver:
          address: "{{ kubernetes_deployment.api_server.host }}"
          port: "{{ kubernetes_deployment.api_server.port }}"
      when: kubernetes_deployment.enabled | default(false)

  post_tasks:
    - name: Initialize summary tracking
      include_tasks: "tasks/summary_tracker.yml"
      when: 
        - summary_enabled | default(true)
        - kubernetes_deployment.enabled | default(false)

    - name: Collect and generate Kubernetes cluster summary
      include_tasks: "tasks/collect_k8s_summary.yml"
      vars:
        generate_summary_report: false  # Don't show app summary for K8s-only deployment
        generate_k8s_summary_report: true
        should_save_summary: "{{ save_summary_to_file | default(true) }}"
      when: 
        - summary_enabled | default(true)
        - kubernetes_deployment.enabled | default(false)

    - name: Display Kubernetes deployment completion message
      debug:
        msg: |
          
          🎉 Kubernetes cluster deployment completed!
          
          {% if save_summary_to_file | default(true) %}
          📄 Summary report saved to: output/installation_summary_{{ ansible_date_time.epoch }}.md
          {% endif %}
          
          🔍 Check the cluster summary above for detailed results.
          
          💡 Next steps:
          • Verify cluster is ready: kubectl get nodes --kubeconfig=output/kubeconfig
          • Check system pods: kubectl get pods -n kube-system --kubeconfig=output/kubeconfig
          • Test cluster access: kubectl cluster-info --kubeconfig=output/kubeconfig
          • Export kubeconfig: export KUBECONFIG=$PWD/output/kubeconfig
          • All output files are saved in the ./output/ directory
          
          📋 To install Smart Scaler applications on this cluster:
          • Ensure global_kubeconfig in user_input.yml points to output/kubeconfig
          • Run: ansible-playbook site.yml
      when: 
        - summary_enabled | default(true)
        - kubernetes_deployment.enabled | default(false) 
